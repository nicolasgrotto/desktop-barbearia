<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        naKBD6lGfKdo4FrqJykW+JTqRIoFrqV+kmKBT6lOpFjgOuomKRZ4iGpFigWuoV6SYoGHqFakWOAa6iXf
        FAk8TNUixQLXUC/5pkjgoaoX3xQJXEO95JsigYeqXnxTJHAN9XJeccCXqGbzigPOq5N8UyTwJaoZ3xQJ
        nFUf+aZI4EtUM74pEjirPvJNkcCXqGZ8UyRwVn2cVxzwparbvOKAs+rjvOKAL1Xd5hUHnFUf5xUHfKnq
        Nq844Kz6OK844EtVt3nFAefUxXnFAU9R7eYVB5xRD+cVBzxFtZtXHHBGPZxXHPAU1W5eccAZ9XBeccBT
        VLt5xQFn1MN5xQFPUe3mFQecUQ+nFQU8VfWbVhRwRj2cVhTwVNVvWlHAGfVwWlHAU1W/aUUBZ9TDaUUB
        T1X9phUFnFEPpxUFPFX1m1YUcEY9nFYU8FTVb1pRwBn1cFpRwFNVv2lFAWfUw2lFAU9V/aYVBZxRD6cV
        BTxV9ZtWFHBGPZxWFPBU1W9aUcAZ9XBaUcBTVb9pRQFn1MNpRQFPVf2mFQWcUQ9nFQMcUQ1nFQOcUQ9n
        FQMcUQ1nFQOcUQ9nFQMcUQ1nFQOcUQ9nFQMcUQ1nFQOcUQ9nFQMcUQ1nFQOcUQ9nFQMcUQ1nFQOcUQ9n
        FQMcUQ1nFQOcUQ9nFQMcUQ1nFQOcUQ9nFQMcUQ1nFQOcUQ9nFQMcUQ1nFQOcUQ9nFQMcUQ1nFQOcUQ9n
        FQMcUQ1nFQOcUQ9nFQMcUQ1nFQOcUQ9nFQMcUQ1nFQOcUQ9nFQMcUQ1nFQOcUQ9nFQMcUQ1nFQOcUQ9n
        FQMcUQ1nFQOcUQ9nFQMcUQ1nFQOcUQ9nFQMcUQ1nFQOcUQ9nFQMcUQ1nFQOcUQ9nFQMcUQ1nFQOcUQ9n
        FQMcUQ1nFQOcUQ9nFQMcUQ1nFQOcUQ9nFQMcUQ1nFQOcUQ9nFQMcUQ1nFQOcUQ9nFQMcUQ1nFQOcUQ9n
        FQMcUQ1nFQOcUQ9nFQMcUQ1nFQOcUQ9nFQMcUQ1nFQOcUQ9nFQMcUQ1nFQOcUQ9nFQMcUQ1nFQOcUQ9n
        FQMcUQ1nFQOcUQ9nFQMcUQ1nFQOcUQ9nFQMcUQ1nFQOcUQ9nFQMcUQ1nFQOcUQ9nFQMcUQ1nFQOcUQ9n
        FQMcUQ1nFQOcUQ9nFQMcUQ1nFQOcUQ9nFQMcUQ1nFQOcUQ9nFQMcUQ1nFQOcUQ9nFQMcUQ1nFQOcUQ9n
        FQMcUQ1nFQOcUQ9nFQMcUQ1nFQOcUQ9nFQMcUQ1nFQOcUQ9nFQMcUQ1nFQOcUQ9nFQMcUQ1nFQOcUQ9n
        FQMcUQ1nFQOcUQ9nFQMcUQ1nFQP8T70A4MG6ZrmKngsAT9Y1zLOUOwAX0zXNI5UtAC+i65uPKkcAXlTX
        OW9VbgDcRNc7v1JOANxU1z1/KhcARnT97yoHAEY1Bzv63gDwh+bh3vquAPA3zcT99P0A4LeajXvoOwHA
        mzQfr63vAgDv0oy8nj4/AHxKs/Ia+swA8BDNy7X1WQHgoZqZa+ozAsCXaG6upc8GAF+q2bmGPhMAPEXz
        c1afBQCeqhk6o88AAEc0R8/VewPAUc3S8/S+AHBUs/QcvScAXELz9LV6LwC4lGbqa/QeAHBJzdXj9foA
        cEnN1WP12gBwac3WY/SaAPASmq/P6/UA4CU0X5/TawHAS2nGPq7XAYCX0ox9TK8BAC+pOXu//h4AXlJz
        9j79LQC8tGbt7fo7AHhpzdrb9DcAcAvN27/r9wHgFpq33+t3AeBWmrlf6/cA4FaauZ/rdwDglpq7f+rf
        AeCWmrt/6t8B4Jaau7/r3wDg1pq9v/RzALi1Zu8v/RwAbq3Z+0s/B4Bba/b+p58BwITmzwACsKX5M4AA
        bGn+DCAAW4wfALMMIACTDCAAkwwgAJMMIACTDCAAkwwgAJMMIACTDCAAkwwgAJMMIACTDCAAkwwgAJMM
        IACTDCAAkwwgAJMMIACTDCAAkwwgAJMMIACTDCAAkwwgAJMMIACTDCAAkwwgAJMMIACTDCAAkwwgAJMM
        IACTDCAAkwwgAJMMIACTDCAAkwwgAJMMIACTDCAAkwwgAJMMIACTDCAAkwwgAJMMIACTDCAAkwwgAJMM
        IACTDCAAkwwgAJMMIACTDCAAkwwgAJMMIACTDCAAkwwgAJMMIACTDCAAkwwgAJMMIACTDCAAkwwgAJMM
        IACTDCAAkwwgAJMMIACTDCAAkwwgAJMMIACTDCAAkwwgAJMMIACTDCAAkwwgAJMMIACTDCAAkwwgAJMM
        IACTDCAAkwwgAJMMIACTDCAAkwwgAJMMIACTDCAAkwwgAJMMIACTDCAAkwwgAJMMIACTDCAAkwwgAJMM
        IACTDCAAkwwgAJMMIACTDCAAkwwgAJMMIACTDCAAkwwgAJMMIACTDCAAkwwgAJMMIACTDCAAkwwgAJMM
        IACTDCAAkwwgAJMMIACTDCAAkwwgAJMMIACTDCAAkwwgAJMMIACTDCAAkwwgAJMMIACTDCAAkwwgAJMM
        IACTDCAAkwwgAJMMIACTDCAAkwwgAJMMIACTDCAAkwwgAJMMIACTDCAAkwwgAJMMIACTDCAAkwwgAJMM
        IACTDCAAkwwgAJMMIACTDCAAkwwgAJMMIACTDCAAkwwgAJMMIACTDCAAkwwgAJMMIACTDCAAkwwgAJMM
        IACTDCAAkwwgAJMMIACTDCAAkwwgAJMMIACTDCAAkwwgAJMMIACTDCAAkwwgAJMMIACTDCAAkwwgAJMM
        IACTDCAAkwwgAJMMIACTDCAAkwwgAJMMIACTDCAAkwwgAJMMIACTDCAAkwwgAJMMIACTDCAAkwwgAJMM
        IACTDCAAkwwgAJMMIACTDCAAkwwgAJMMIACTDCAAkwwgAJMMIACTDCAAkwwgAJMMIACTDCAAkwwgAJMM
        IACTDCAAkwwgAJMMIACTDCAAkwwgAJMMIACTDCAAkwwgAJMMIACTDCAAkwwgAJMMIACTDCAAkwwgAJMM
        IACTDCAAkwwgAJMMIACTDCAAkwwgAJMMIACTDCAAk/7zX/03AEz4Y/z+q/8HgAnNnwEEYEvzZwAB2NL8
        /U8/A4Bba/b+0s8B4Naavb/0cwC4tWbvL/0cAG6t2fu7/g0Abqm5+6f+HQBuqbn7p/4dAG6pufu5fgcA
        bqWZ+7V+DwBupZn7vX4XAG6heft3/T4A3ELz9jb9DQC8tGbt7fo7AHhpzdr79LcA8JKas/fr7wHgJTVn
        H9NrAMBLacY+rtcBgJfSjH1OrwUAL6H5+rxeDwBeQvP1GL0mAFxas/VYvTYAXFJz9Xi9PgBcUnP1NXoP
        ALiUZupr9V4AcAnN03P0ngBwVLP0PL0vABzVLD1X7w0ARzRHZ/QZAOCpmqGz+iwA8BTNzzX0mQDgSzU7
        19JnA4Av0dxcU58RAB6qmbm2PisAPETz8hr6zADwKc3K6+nzA8C7NCOvre8CAG/SfNxD3wkAfqvZuJ++
        HwD8TTNxb31XAPhD87Cj7w3AqOZgVzkAMKLrnz+VCwA31XXPr5QTADfR9c5blRsAL6rrnI8qRwBeRNc3
        j1S2AFxM1zTPUu4APFnXMFfSswHgQbpeb+Q///l/VWoHiFPxnr0AAAAASUVORK5CYII=
</value>
  </data>
</root>